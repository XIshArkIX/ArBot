const { commando, Command } = require('discord.js-commando');
// const discord = require('discord.js');
const moment = require('moment');
const consola = require('consola');

module.exports = class ruletka extends Command {
	constructor(client) {
		super(client, {
			name: 'ruletka',
			group: 'command',
			memberName: 'ruletka',
			aliases: ['lucky', 'get-lucky', '—É–¥–∞—á–∞', '—Ä—É–ª–µ—Ç–∫–∞'],
			description: '–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –í–∞—à—É —É–¥–∞—á—É',
			examples: ['ruletka'],
			guildOnly: true,
			throttling: {
				usages: 1,
				duration:	14400
			}
		});
	}

	async run(msg, user) {
		const answers = [
			// "–≤–æ—Ç —ç—Ç–æ —Ç–µ–±–µ –ø–æ–≤–µ–∑–ª–æ! –¢—ã –ø–æ–ª—É—á–∞–µ—à—å –º—É—Ç—Ö–∞–º–º–µ—Ä –≤ —Ä–∞–∑–º–µ—Ä–µ –æ–¥–Ω–æ–π —à—Ç—É–∫–∏.", // 1
			// "–∞ —Ç—ã –≤–µ–∑—É–Ω—á–∏–∫! –¢—ã –ø–æ–ª—É—á–∞–µ—à—å —á–∞—Ç—Ö–∞–º–º–µ—Ä –≤ —Ä–∞–∑–º–µ—Ä–µ –æ–¥–Ω–æ–π —à—Ç—É–∫–∏.", // 2
			"—Ç–µ–±–µ –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–ø–∞–ª–æ, –ø–æ–ø—Ä–æ–±—É–π –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ :(", // 3 // 1
			"—Ä—É–ª–µ—Ç–∫–∞ - –¥–µ–ª–æ —Ä–∏—Å–∫–æ–≤–æ–µ, –æ–¥–Ω–∞–∫–æ —Å–µ–π—á–∞—Å –æ–Ω–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–ø—Ä–∞–≤–¥–∞–ª–æ —Å–µ–±—è. –î–µ—Ä–∂–∏ —Ä–æ–ª—å –ø–æ–≤—ã—à–µ!", // 4 // 2
			"–∫–∞–∂–µ—Ç—Å—è, —Ç—ã –ø–æ–ø–∞–ª –≤ –ø–µ—Ä–µ–¥–µ–ª–∫—É –∏ —Ç–≤–æ—ë —Ç–µ–ª–æ –ø–∞—Ä–∞–ª–∏–∑–æ–≤–∞–ª–æ. –†–µ–∞–±–∏–ª–∏—Ç–∏—Ä—É–π—Å—è!", // 5 // 3
			"–ø—Ä–æ–∫–ª–∏–Ω–∞—é –≤—ã–∑–≤–∞–≤—à–µ–≥–æ –º–µ–Ω—è –Ω–∞ –¥–æ–∂–¥—å –∏–∑ –∫–∞–∫–∞—à–µ–∫!" // 7 // 4
		];
		const elInArray = answers.length;
		var luckyVar = randomInteger(1, elInArray);
		const type = {
			"legendary": 16753696,
			"rare": 1191850,
			"default": 8353401,
			"bad": 16720896,
			"normal": 16711202
		};

		// msg.channel.send(`__**DEBUG INFO**__\nelInArray: ${elInArray}\nluckyVar: ${luckyVar}`);

		switch (luckyVar) {
			case 1:
				msg.channel.send({embed:
					{
						color: type.default,
						fields: [
							{
								name: `–ù–∏—á–µ–≥–æ | Default`,
								value: `${msg.member.nickname ? msg.member.nickname : msg.author.username}, ${answers[0]}`
							}
						]
					}
				});
				break;
			case 2:
				msg.channel.send({embed:
					{
						color: type.rare,
						fields: [
							{
								name: `–†–æ–ª—å | Rare`,
								value: `${msg.member.nickname ? msg.member.nickname : msg.author.username}, ${answers[1]}\n${moment().locale('ru').add(1, 'days').calendar()} —Ä–æ–ª—å –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è!`
							},
							{
								name: `–ü–æ–ª—É—á–µ–Ω–∏–µ`,
								value: `–ë–æ—Ç –ø–æ–ø—ã—Ç–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–¥–∞—Ç—å —Ä–æ–ª—å –≤—ã—à–µ —Ç–≤–æ–µ–π, –µ—Å–ª–∏ –∂–µ –Ω–∏—á–µ–≥–æ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –Ω–∞–ø–∏—à–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º.`
							}
						]
					}
				});
				const grz = msg.guild.roles.size-2;
				if (grz === 0) {
					msg.channel.send(`–ß—Ç–æ–±—ã –≤—ã–¥–∞—Ç—å —Ä–æ–ª—å, —Å–Ω–∞—á–∞–ª–∞ –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å.`);
					return;
				}
				msg.guild.fetchMember(msg.author).then(w => {
			    const cmhrnumber = w.highestRole.position;
					if (cmhrnumber>=grz) {
						msg.reply('—É —Ç–µ–±—è –∏ —Ç–∞–∫ —Å–∞–º–∞—è –≤—ã—Å–æ–∫–∞—è –∏ —Å—Ç–∞—Ç—É—Å–Ω–∞—è —Ä–æ–ª—å. –ö—É–¥–∞ —Ç–µ–±–µ –µ—â—ë?');
					} else if (!msg.guild.me.hasPermission("MANAGE_ROLES")) {
							msg.reply('–Ω–µ –º–æ–≥—É –≤—ã–¥–∞—Ç—å —Ç–µ–±–µ —Ä–æ–ª—å, —Ç.–∫. –º–Ω–µ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø—Ä–∞–≤.');
						}	else {
							const gr = msg.guild.roles.find(nr => nr.position > cmhrnumber && nr.managed === false && nr.position !== 0);
							if (
								gr.hasPermission('ADMINISTRATOR') ||
								gr.hasPermission('KICK_MEMBERS') ||
								gr.hasPermission('BAN_MEMBERS') ||
								gr.hasPermission('MANAGE_CHANNELS') ||
								gr.hasPermission('MANAGE_GUILD') ||
								gr.hasPermission('MANAGE_MESSAGES') ||
								gr.hasPermission('MUTE_MEMBERS') ||
								gr.hasPermission('DEAFEN_MEMBERS') ||
								gr.hasPermission('MOVE_MEMBERS') ||
								gr.hasPermission('MANAGE_NICKNAMES') ||
								gr.hasPermission('MANAGE_ROLES') ||
								gr.hasPermission('MANAGE_WEBHOOKS') ||
								gr.hasPermission('MANAGE_EMOJIS')
							) {
								msg.reply('–ø—Ä–æ—Å—Ç–∏, –Ω–æ —è –Ω–µ –º–æ–≥—É –Ω–∞–¥–µ–ª–∏—Ç—å —Ç–µ–±—è —Ç–∞–∫–∏–º–∏ –ø–æ–ª–Ω–æ–º–æ—á–∏—è–º–∏.');
								return;
							} else if (gr === null) {
								const gr_1 = msg.guild.roles.find(nr_1 => nr_1.managed === false && nr_1.position !== 0);
								w.addRole(gr_1).catch(err => {
									consola.error(err);
									msg.reply('—á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ—Å–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞/–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤—Ä—É—á–Ω—É—é –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–±–µ —Ä–æ–ª—å.');
								});
								const rmRole_1 = () => {
									w.removeRole(gr_1).catch(error => consola.error(error));
								}
								setTimeout(rmRole_1, 86400000);
							} else {
								w.addRole(gr).catch(err => {
									consola.error(err);
									msg.reply('—á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ—Å–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞/–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤—Ä—É—á–Ω—É—é –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–±–µ —Ä–æ–ª—å.');
								});
								const rmRole = () => {
									w.removeRole(gr).catch(error => consola.error(error));
								}
								setTimeout(rmRole, 86400000);
							}
						}
				});
				break;
			case 3:
				msg.guild.fetchMember(msg.author).then( response => {
					let muted = msg.guild.roles.find('name', 'Muted');
					// First step
					msg.channel.overwritePermissions(response, {
						SEND_MESSAGES: false,
						SPEAK: false,
						SEND_TTS_MESSAGES: false,
						EMBED_LINKS: false,
						ATTACH_FILES: false,
						MENTION_EVERYONE: false,
						USE_EXTERNAL_EMOJIS: false,
						CONNECT: false,
						USE_VAD: false
					})
					.catch(error => consola.error(error));
					// Second step
					response.addRole(muted).catch(error => consola.error(error));
					// Third step
					const unmute = () => {
						msg.channel.overwritePermissions(response, {
							SEND_MESSAGES: true,
							SPEAK: true,
							SEND_TTS_MESSAGES: true,
							EMBED_LINKS: true,
							ATTACH_FILES: true,
							MENTION_EVERYONE: true,
							USE_EXTERNAL_EMOJIS: true,
							CONNECT: true,
							USE_VAD: true
						})
						.catch(error => consola.error(error));
						response.removeRole(muted).catch(error => consola.error(error));
					}
					setTimeout(unmute, 300000);
					msg.channel.send({embed:
						{
							color: type.bad,
							fields: [
								{
									name: `–ü–µ—Ä–µ—Å—Ç—Ä–µ–ª–∫–∞ | Bad`,
									value: `${response.nickname ? response.nickname : msg.author.username}, ${answers[2]}`
								}
							]
						}
					});
				}).catch( error => consola.error(error));
				break;
			case 4:
				msg.channel.fetchMessage(msg.id).then(m => m.react('üí©'));
				msg.channel.send({embed:
					{
						color: type.normal,
						fields: [
							{
								name: `–î–æ–∂–¥—å | Normal`,
								value: `${msg.member.nickname ? msg.member.nickname : msg.author.username}, ${answers[3]}`
							}
						]
					}
				});
				break;
			case 5:
				const case1 = await msg.channel.send({embed:
					{
						color: type.legendary,
						fields: [
							{
								name: `–ú—É—Ç—Ö–∞–º–º–µ—Ä | Legendary`,
								value: `${msg.member.nickname ? msg.member.nickname : msg.author.username}, ${answers[0]}`
							},
							{
								name: `–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ`,
								value: `–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç –∑–∞–±–µ—Ä—ë—Ç –Ω–∏–∫ —Ç–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ç—ã —Ö–æ—Ç–µ–ª –±—ã –∑–∞–º—É—Ç–∏—Ç—å.\n–ü–∏—à–∏ —Ç–∞–∫: **@username**\n–ù–∞–ø—Ä–∏–º–µ—Ä: **@cokrychitel#7626**`
							}
						]
					}
				});
				// const filter1 = m => m.content === msg.guild.fetchMember(msg.mentions.members.first());
				// msg.channel.awaitMessages(filter1, { maxMatches: 1, time: 10000, errors: ['time'] })
				// 	.then(collected => {
				// 		msg.channel.send(`–ü—Ä–æ—Å—Ç–∏, ${collected.first().content}, –Ω–æ –≤–µ–∑—É–Ω—á–∏–∫ –≤—ã–±—Ä–∞–ª —Ç–µ–±—è!`);
				// 		case1.react('‚úÖ');
				// 	})
				// 	.catch(err => {
				// 		msg.reply('–ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞. –ù–µ –ø—ã—Ç–∞–ª—Å—è –ª–∏ —Ç—ã –∑–∞–º—É—Ç–∏—Ç—å –º–æ–¥–µ—Ä–∞/–∞–¥–º–∏–Ω–∞?');
				// 		consola.error(err);
				// 		case1.react('‚ùé');
				// 	});
				break;
			case 6:
				const case2 = await msg.channel.send({embed:
					{
						color: type.legendary,
						fields: [
							{
								name: `–ß–∞—Ç—Ö–∞–º–º–µ—Ä | Legendary`,
								value: `${msg.member.nickname ? msg.member.nickname : msg.author.username}, ${answers[1]}`
							},
							{
								name: `–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ`,
								value: `–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç –∑–∞–±–µ—Ä—ë—Ç –Ω–∏–∫ —Ç–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ç—ã —Ö–æ—Ç–µ–ª –±—ã –∑–∞–º—É—Ç–∏—Ç—å.\n–ü–∏—à–∏ —Ç–∞–∫: **@username**\n–ù–∞–ø—Ä–∏–º–µ—Ä: **@cokrychitel#7626**`
							}
						]
					}
				});
				// const filter2 = m => m.content === msg.guild.fetchMember(msg.mentions.members.first());
				// msg.channel.awaitMessages(filter2, { maxMatches: 1, time: 10000, errors: ['time'] })
				// 	.then(collected => {
				// 		msg.channel.send(`–ü—Ä–æ—Å—Ç–∏, ${collected.first().content}, –Ω–æ –≤–µ–∑—É–Ω—á–∏–∫ –≤—ã–±—Ä–∞–ª —Ç–µ–±—è!`);
				// 		case2.react('‚úÖ');
				// 	})
				// 	.catch(err => {
				// 		msg.reply('–ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞. –ù–µ –ø—ã—Ç–∞–ª—Å—è –ª–∏ —Ç—ã –∑–∞–º—É—Ç–∏—Ç—å –º–æ–¥–µ—Ä–∞/–∞–¥–º–∏–Ω–∞?');
				// 		consola.error(err);
				// 		case2.react('‚ùé');
				// 	});
				break;
			default:
				break;
		}

		function randomInteger(min, max) {
      var rand = min - 0.5 + Math.random() * (max - min + 1);
      rand = Math.round(rand);
			// if (rand === 0) return rand = 1;
      return rand;
    }
	}
};
